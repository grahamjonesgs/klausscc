
BEGIN:
AND A B
AND A B
AND A B
PUSH A
RET
#DATA1 0x2
RET
#DATA2 "H"
RET

/* test comment
SETR A 0x100
7SEGR B
DELAYV 0xFFF
SETR D 0x0 // holding memory location to read


LOOP:
//7SEGR A 
DECR A
//DELAYV 0x000A
CALLZ RESET:
//DELAYV 0x000A
JMP LOOP:

RESET:
//LEDR D
7SEGR D
SETR A #ADDR
//CALL PRINT_DATA:  // Print add 
//TXR D  // print address from reg
//SETR A #DATA
//CALL PRINT_DATA: // print data word
//TXMEMR D // print memory contects
//NEWLINE
INCR D
SETR A 0x1
RET

#TESTDATA2 "Test line"
#ADDR "Address - "
#DATA " Data - "
#DATALONG 0xFF

// A is address to start, B used to be zero, C used to copy from mem
PRINT_DATA:  // To print a string from memory to UART
PUSH B  // Save register
SETR B 0x0
PRINT_DATA_LOOP:
MEMREADRR C A // check for end of message
CMPRR B C  // Check if mem is zero
JMPE PRINT_DATA_EXIT:
TXCHARMEMR A // Print char
INCR A  // Next Char
JMP PRINT_DATA_LOOP:
PRINT_DATA_EXIT:
POP B
RET */






