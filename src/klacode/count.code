                              -- // Prints string starting at reg A
                              -- // Reg B will hold the length of the string for counting down
0x00000000: 0000F013 00000FFF -- DELAYV 0xFFF
0x00000002:                   -- STRING_PRINT:
0x00000002: 00004000          -- PUSH A
0x00000003: 00004001          -- PUSH B 
0x00000004: 00007110          -- MEMREADRR B A // Reads string length to B
0x00000005: 00000840          -- INCR A // Increments A to first char group
                              -- 
0x00000006:                   -- STRING_PRINT_LOOP:
0x00000006: 00005040          -- TXSTRMEMR A // Prints chars at A
0x00000007: 0000F010          -- NOP // Delays due to slow TXSTRMEMR
0x00000008: 00000840          -- INCR A // Increments A // To next char group
0x00000009: 00000851          -- DECR B // Decrements B // To count length down
0x0000000A: 00001002 00000006 -- JMPNZ STRING_PRINT_LOOP: // If A is not zero, loops
                              -- 
0x0000000C: 00004011          -- POP B // Restores B
0x0000000D: 00004010          -- POP A // Restores A
0x0000000E: 00001012          -- RET // Returns 
                              -- 
                              -- _start
0x0000000F: 00000800 00000005 -- SETR A 5
0x00000011:                   -- BEGIN:
0x00000011: 00000840          -- INCR A
0x00000012: 00003020          -- 7SEG1R A
0x00000013: 0000F013 00000FFF -- DELAYV 0xFFF
0x00000015: 00005010          -- TXR A
                              -- 
                              -- 
0x00000016: 00004000          -- PUSH A
0x00000017: 00000800 0000002D -- SETR A #TEST
0x00000019: 00001009 00000002 -- CALL STRING_PRINT:
0x0000001B: 00004010          -- POP A
                              -- 
0x0000001C: 00004000          -- PUSH A
0x0000001D: 00000800 00000031 -- SETR A #TEST2
0x0000001F: 00001009 00000002 -- CALL STRING_PRINT:
0x00000021: 00004010          -- POP A
                              -- 
0x00000022: 00004000          -- PUSH A
0x00000023: 00000800 00000034 -- SETR A #TEST3
0x00000025: 00001009 00000002 -- CALL STRING_PRINT:
0x00000027: 00004010          -- POP A
                              -- 
                              -- 
0x00000028: 00001000 00000011 -- JMP BEGIN:
                              -- 
                              -- 
                              -- //!include string_print.kla
                              -- 
0x0000002A: 00000002          -- #DUMMY "123456"
0x0000002B: 31323334          -- #DUMMY "123456"
0x0000002C: 35360000          -- #DUMMY "123456"
0x0000002D: 00000003          -- #TEST "Hello there" 
0x0000002E: 48656C6C          -- #TEST "Hello there" 
0x0000002F: 6F207468          -- #TEST "Hello there" 
0x00000030: 65726500          -- #TEST "Hello there" 
0x00000031: 00000002          -- #TEST2 "12345"
0x00000032: 31323334          -- #TEST2 "12345"
0x00000033: 35000000          -- #TEST2 "12345"
0x00000034: 00000004          -- #TEST3 "Third "line\n"
0x00000035: 54686972          -- #TEST3 "Third "line\n"
0x00000036: 6420226C          -- #TEST3 "Third "line\n"
0x00000037: 696E650D          -- #TEST3 "Third "line\n"
0x00000038: 0A000000          -- #TEST3 "Third "line\n"
0x00000039: 00000000          -- #LONG 50
0x0000003A: 00000000          -- #LONG 50
0x0000003B: 00000000          -- #LONG 50
0x0000003C: 00000000          -- #LONG 50
0x0000003D: 00000000          -- #LONG 50
0x0000003E: 00000000          -- #LONG 50
0x0000003F: 00000000          -- #LONG 50
0x00000040: 00000000          -- #LONG 50
0x00000041: 00000000          -- #LONG 50
0x00000042: 00000000          -- #LONG 50
0x00000043: 00000000          -- #LONG 50
0x00000044: 00000000          -- #LONG 50
0x00000045: 00000000          -- #LONG 50
0x00000046: 00000000          -- #LONG 50
0x00000047: 00000000          -- #LONG 50
0x00000048: 00000000          -- #LONG 50
0x00000049: 00000000          -- #LONG 50
0x0000004A: 00000000          -- #LONG 50
0x0000004B: 00000000          -- #LONG 50
0x0000004C: 00000000          -- #LONG 50
0x0000004D: 00000000          -- #LONG 50
0x0000004E: 00000000          -- #LONG 50
0x0000004F: 00000000          -- #LONG 50
0x00000050: 00000000          -- #LONG 50
0x00000051: 00000000          -- #LONG 50
0x00000052: 00000000          -- #LONG 50
0x00000053: 00000000          -- #LONG 50
0x00000054: 00000000          -- #LONG 50
0x00000055: 00000000          -- #LONG 50
0x00000056: 00000000          -- #LONG 50
0x00000057: 00000000          -- #LONG 50
0x00000058: 00000000          -- #LONG 50
0x00000059: 00000000          -- #LONG 50
0x0000005A: 00000000          -- #LONG 50
0x0000005B: 00000000          -- #LONG 50
0x0000005C: 00000000          -- #LONG 50
0x0000005D: 00000000          -- #LONG 50
0x0000005E: 00000000          -- #LONG 50
0x0000005F: 00000000          -- #LONG 50
0x00000060: 00000000          -- #LONG 50
0x00000061: 00000000          -- #LONG 50
0x00000062: 00000000          -- #LONG 50
0x00000063: 00000000          -- #LONG 50
0x00000064: 00000000          -- #LONG 50
0x00000065: 00000000          -- #LONG 50
0x00000066: 00000000          -- #LONG 50
0x00000067: 00000000          -- #LONG 50
0x00000068: 00000000          -- #LONG 50
0x00000069: 00000000          -- #LONG 50
0x0000006A: 00000000          -- #LONG 50
