                              -- // Prints string starting at reg A
                              -- // Reg B will hold the length of the string for counting down
                              -- //DELAYV 0xFFF
0x00000000:                   -- STRING_PRINT:
                              -- //DELAYV 0xFFF
                              -- //NOP
0x00000000: 00004000          -- PUSH A
0x00000001: 00004001          -- PUSH B 
0x00000002: 00007110          -- MEMREADRR B A // Reads string length to B
0x00000003: 00000840          -- INCR A // Increments A to first char group
                              -- 
0x00000004:                   -- STRING_PRINT_LOOP:
0x00000004: 00005040          -- TXSTRMEMR A // Prints chars at A
0x00000005: 00000840          -- INCR A // Increments A // To next char group
0x00000006: 00000851          -- DECR B // Decrements B // To count length down
0x00000007: 00001002 00000004 -- JMPNZ STRING_PRINT_LOOP: // If A is not zero, loops
                              -- 
0x00000009: 00004011          -- POP B // Restores B
0x0000000A: 00004010          -- POP A // Restores A
0x0000000B: 00001012          -- RET // Returns 
                              -- 
                              -- _start
0x0000000C: 00003071 00001234 -- 7SEG1V 0x1234
0x0000000E: 0000F013 00000FFF -- DELAYV 0x0FFF
0x00000010: 00000800 00000005 -- SETR A 5
0x00000012: 0000F010          -- NOP
0x00000013: 0000F010          -- NOP
0x00000014:                   -- BEGIN:
0x00000014: 00000840          -- INCR A
0x00000015: 00003040          -- 7SEGR A
0x00000016: 00005010          -- TXR A
0x00000017: 00005001          -- newline
0x00000018: 00005010          -- TXR A
0x00000019: 00005001          -- newline
0x0000001A: 00005010          -- TXR A
0x0000001B: 00005001          -- newline
0x0000001C: 00005010          -- TXR A
0x0000001D: 00005001          -- newline
                              -- 
0x0000001E: 00004000          -- PUSH A
0x0000001F: 00000800 00000033 -- SETR A #TEST1
0x00000021: 00001009 00000000 -- CALL STRING_PRINT:
0x00000023: 00005001          -- newline
0x00000024: 00004010          -- POP A
                              -- 
0x00000025: 00004000          -- PUSH A
0x00000026: 00000800 00000036 -- SETR A #TEST2
0x00000028: 00001009 00000000 -- CALL STRING_PRINT:
0x0000002A: 00004010          -- POP A
                              -- 
0x0000002B: 00004000          -- PUSH A
0x0000002C: 00000800 0000003A -- SETR A #TEST3
0x0000002E: 00001009 00000000 -- CALL STRING_PRINT:
0x00000030: 00004010          -- POP A
                              -- 
                              -- 
0x00000031: 00001000 00000014 -- JMP BEGIN:
                              -- 
                              -- //#TEST1 "Hello there, this must be a longer jdkljdk jdkslstring to test\n" 
                              -- 
                              -- //!include string_print.kla
                              -- 
0x00000033: 00000002          -- #TEST1 "Short\n" 
0x00000034: 53686F72          -- #TEST1 "Short\n" 
0x00000035: 740D0A00          -- #TEST1 "Short\n" 
0x00000036: 00000003          -- #TEST2 "123456789\n"
0x00000037: 31323334          -- #TEST2 "123456789\n"
0x00000038: 35363738          -- #TEST2 "123456789\n"
0x00000039: 390D0A00          -- #TEST2 "123456789\n"
0x0000003A: 00000004          -- #TEST3 "Third "line\n"
0x0000003B: 54686972          -- #TEST3 "Third "line\n"
0x0000003C: 6420226C          -- #TEST3 "Third "line\n"
0x0000003D: 696E650D          -- #TEST3 "Third "line\n"
0x0000003E: 0A000000          -- #TEST3 "Third "line\n"
0x0000003F: 00000001          -- #TEST4 "1"
0x00000040: 31000000          -- #TEST4 "1"
0x00000041: 00000000          -- #LONG 50 
0x00000042: 00000000          -- #LONG 50 
0x00000043: 00000000          -- #LONG 50 
0x00000044: 00000000          -- #LONG 50 
0x00000045: 00000000          -- #LONG 50 
0x00000046: 00000000          -- #LONG 50 
0x00000047: 00000000          -- #LONG 50 
0x00000048: 00000000          -- #LONG 50 
0x00000049: 00000000          -- #LONG 50 
0x0000004A: 00000000          -- #LONG 50 
0x0000004B: 00000000          -- #LONG 50 
0x0000004C: 00000000          -- #LONG 50 
0x0000004D: 00000000          -- #LONG 50 
0x0000004E: 00000000          -- #LONG 50 
0x0000004F: 00000000          -- #LONG 50 
0x00000050: 00000000          -- #LONG 50 
0x00000051: 00000000          -- #LONG 50 
0x00000052: 00000000          -- #LONG 50 
0x00000053: 00000000          -- #LONG 50 
0x00000054: 00000000          -- #LONG 50 
0x00000055: 00000000          -- #LONG 50 
0x00000056: 00000000          -- #LONG 50 
0x00000057: 00000000          -- #LONG 50 
0x00000058: 00000000          -- #LONG 50 
0x00000059: 00000000          -- #LONG 50 
0x0000005A: 00000000          -- #LONG 50 
0x0000005B: 00000000          -- #LONG 50 
0x0000005C: 00000000          -- #LONG 50 
0x0000005D: 00000000          -- #LONG 50 
0x0000005E: 00000000          -- #LONG 50 
0x0000005F: 00000000          -- #LONG 50 
0x00000060: 00000000          -- #LONG 50 
0x00000061: 00000000          -- #LONG 50 
0x00000062: 00000000          -- #LONG 50 
0x00000063: 00000000          -- #LONG 50 
0x00000064: 00000000          -- #LONG 50 
0x00000065: 00000000          -- #LONG 50 
0x00000066: 00000000          -- #LONG 50 
0x00000067: 00000000          -- #LONG 50 
0x00000068: 00000000          -- #LONG 50 
0x00000069: 00000000          -- #LONG 50 
0x0000006A: 00000000          -- #LONG 50 
0x0000006B: 00000000          -- #LONG 50 
0x0000006C: 00000000          -- #LONG 50 
0x0000006D: 00000000          -- #LONG 50 
0x0000006E: 00000000          -- #LONG 50 
0x0000006F: 00000000          -- #LONG 50 
0x00000070: 00000000          -- #LONG 50 
0x00000071: 00000000          -- #LONG 50 
0x00000072: 00000000          -- #LONG 50 
